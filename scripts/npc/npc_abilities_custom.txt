#base "telent/telent.kv"
// Dota2 Editor
// Get latest version: https://github.com/zombieJ/nw-dota2editor

// 应用Imba的方法，新建的英雄采用#base的引用来维护
// 字母顺序排序
#base "heroes/aya/npc_abilities_aya.txt"
#base "heroes/byakuren/npc_abilities_byakuren.txt"
#base "heroes/chen/npc_abilities_chen.txt"
#base "heroes/child/npc_abilities_child.txt"
#base "heroes/cirno/npc_abilities_cirno.txt"
#base "heroes/clown/npc_abilities_clown.txt"
#base "heroes/daiyousei/npc_abilities_daiyousei.txt"
#base "heroes/eirin/npc_abilities_eirin.txt"
#base "heroes/ellen/npc_abilities_ellen.txt"
#base "heroes/flandre/npc_abilities_flandre.txt"
#base "heroes/hatate/npc_abilities_hatate.txt"
#base "heroes/hina/npc_abilities_hina.txt"
#base "heroes/iku/npc_abilities_iku.txt"
#base "heroes/jyoon/npc_abilities_jyoon.txt"
#base "heroes/kagerou/npc_abilities_kagerou.txt"
#base "heroes/kaguya/npc_abilities_kaguya.txt"
#base "heroes/kasen/npc_abilities_kasen.txt"
#base "heroes/kasen/npc_abilities_kasen2.txt"
#base "heroes/keine/npc_abilities_keine.txt"
#base "heroes/kisume/npc_abilities_kisume.txt"
#base "heroes/koakuma/npc_abilities_koakuma.txt"
#base "heroes/koishi/npc_abilities_koishi.txt"
#base "heroes/kogasa/npc_abilities_kogasa.txt"
#base "heroes/kokoro/npc_abilities_kokoro.txt"
#base "heroes/kurumi/npc_abilities_kurumi.txt"
#base "heroes/larva/npc_abilities_larva.txt"
#base "heroes/komachi/npc_abilities_komachi.txt"
#base "heroes/letty/npc_abilities_letty.txt"
#base "heroes/lilywhite/npc_abilities_lilywhite.txt"
#base "heroes/lunasa/npc_abilities_lunasa.txt"
#base "heroes/lyrica/npc_abilities_lyrica.txt"
#base "heroes/margatroid/npc_abilities_margatroid.txt"
#base "heroes/marisa/npc_abilities_marisa.txt"
#base "heroes/medicine/npc_abilities_medicine.txt"
#base "heroes/meira/npc_abilities_meira.txt"
#base "heroes/meirin/npc_abilities_meirin.txt"
#base "heroes/merlin/npc_abilities_merlin.txt"
#base "heroes/miko/npc_abilities_miko.txt"
#base "heroes/minamitsu/npc_abilities_minamitsu.txt"
#base "heroes/minoriko/npc_abilities_minoriko.txt"
#base "heroes/miyako/npc_abilities_miyako.txt"
#base "heroes/mokou/npc_abilities_mokou.txt"
#base "heroes/momiji/npc_abilities_momiji.txt"
#base "heroes/mystia/npc_abilities_mystia.txt"
#base "heroes/nazrin/npc_abilities_nazrin.txt"
#base "heroes/nitori/npc_abilities_nitori.txt"
#base "heroes/nue/npc_abilities_nue.txt"
#base "heroes/parsee/npc_abilities_parsee.txt"
#base "heroes/patchouli/npc_abilities_patchouli.txt"
#base "heroes/ran/npc_abilities_ran.txt"
#base "heroes/reimu/npc_abilities_reimu.txt"
#base "heroes/reisen/npc_abilities_reisen.txt"
#base "heroes/reisen02/npc_abilities_reisen02.txt"
#base "heroes/remilia/npc_abilities_remilia.txt"
#base "heroes/rin/npc_abilities_rin.txt"
#base "heroes/rumia/npc_abilities_rumia.txt"
#base "heroes/sagume/npc_abilities_sagume.txt"
#base "heroes/sakuya/npc_abilities_sakuya.txt"
//#base "heroes/samurai/npc_abilities_samurai.txt"
#base "heroes/sanae/npc_abilities_sanae.txt"
#base "heroes/satori/npc_abilities_satori.txt"
#base "heroes/seiga/npc_abilities_seiga.txt"
#base "heroes/seija/npc_abilities_seija.txt"
#base "heroes/shikieiki/npc_abilities_shikieiki.txt"
#base "heroes/shinki/npc_abilities_shinki.txt"
#base "heroes/shion/npc_abilities_shion.txt"
#base "heroes/shou/npc_abilities_shou.txt"
#base "heroes/shizuha/npc_abilities_shizuha.txt"
#base "heroes/star/npc_abilities_star.txt"
#base "heroes/suika/npc_abilities_suika.txt"
#base "heroes/sumireko/npc_abilities_sumireko.txt"
#base "heroes/sunny/npc_abilities_sunny.txt"
#base "heroes/suwako/npc_abilities_suwako.txt"
#base "heroes/tei/npc_abilities_tei.txt"
#base "heroes/tensi/npc_abilities_tensi.txt"
#base "heroes/tojiko/npc_abilities_tojiko.txt"
#base "heroes/toyohime/npc_abilities_toyohime.txt"
#base "heroes/utsuho/npc_abilities_utsuho.txt"
#base "heroes/wriggle/npc_abilities_wriggle.txt"
#base "heroes/yamame/npc_abilities_yamame.txt"
#base "heroes/yasaka/npc_abilities_yasaka.txt"
#base "heroes/yorihime/npc_abilities_yorihime.txt"
#base "heroes/youmu/npc_abilities_youmu.txt"
#base "heroes/youmu2/npc_abilities_youmu2.txt"
#base "heroes/yugi/npc_abilities_yugi.txt"
#base "heroes/yukari/npc_abilities_yukari.txt"
#base "heroes/yumemi/npc_abilities_yumemi.txt"
#base "heroes/yuuka/npc_abilities_yuuka.txt"
#base "heroes/yuyuko/npc_abilities_yuyuko.txt"
"DOTAAbilities"
{
	"Version"		"1"

	// 技能的名字
	"ability_sample_ability"
	{
		// 技能的类型。这里的这个技能是一个无目标，持续施法的技能，不同的属性之间用"|"分割。
		// 这些字段包括：
		// DOTA_ABILITY_BEHAVIOR_AOE ,AOE技能
		// DOTA_ABILITY_BEHAVIOR_ATTACK，攻击附加属性技能，例如克林克兹的火箭
		// DOTA_ABILITY_BEHAVIOR_AURA，光环技能
		// DOTA_ABILITY_BEHAVIOR_AUTOCAST ，自动释放技能，指定这个技能可以切换为自动释放状态，例如哈斯卡的火矛
		// DOTA_ABILITY_BEHAVIOR_CHANNELLED ，持续施法技能，例如光法的冲击波，TK的再装填
		// DOTA_ABILITY_BEHAVIOR_DIRECTIONAL ，方向性技能，例如米拉娜的月之神箭
		// DOTA_ABILITY_BEHAVIOR_DONT_ALERT_TARGET ，不惊醒目标，例如SB的暗影冲刺
		// DOTA_ABILITY_BEHAVIOR_DONT_CANCEL_MOVEMENT ，不影响移动，目前拥有这个属性的只有信使的速度爆发
		// DOTA_ABILITY_BEHAVIOR_DONT_RESUME_ATTACK ，不继续之前攻击
		// DOTA_ABILITY_BEHAVIOR_DONT_RESUME_MOVEMENT ，不继续之前移动,例如斧王的吼
		// DOTA_ABILITY_BEHAVIOR_HIDDEN ，隐藏，拥有此属性的技能不会在技能面板上显示，例如沉默的智力偷取
		// DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING ，无视后摇，例如米拉娜的跳
		// DOTA_ABILITY_BEHAVIOR_IGNORE_CHANNEL ，无视前摇，例如编织者的缩地，屠夫的腐烂等
		// DOTA_ABILITY_BEHAVIOR_IGNORE_PSEUDO_QUEUE ，
		// 无视随机队列，不是很理解，DOTA2拥有此属性的技能有四个，Bane的结束噩梦，海民的释放雪球，水人的力量敏捷转换
		// DOTA_ABILITY_BEHAVIOR_IGNORE_TURN ， 无视面向，DOTA2目前没有拥有这个属性的技能，
		// DOTA_ABILITY_BEHAVIOR_IMMEDIATE ，立即生效，DOTA2很多需要快速反应的技能都拥有这个属性，比如TA的折光
		// DOTA_ABILITY_BEHAVIOR_ITEM ， 这个技能必须绑定一个物品使用。DOTA2目前没有这类技能
		// DOTA_ABILITY_BEHAVIOR_NO_TARGET ，无目标技能，点击立即释放
		// DOTA_ABILITY_BEHAVIOR_NOASSIST ，不辅助，该字段在DOTA2未见使用
		// DOTA_ABILITY_BEHAVIOR_NONE ， 无任何属性，用于空技能，无任何实际效果
		// DOTA_ABILITY_BEHAVIOR_NORMAL_WHEN_STOLEN ， 偷取后正常，应该是用于拉比克的特殊字段，拥有这个属性的技能有
		// 火枪的暗杀，先知的传送，米波的忽悠和影魔的大招
		// DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE ， 不能学习的技能，一般是其他技能的附属技能
		// 如果你想让某个技能玩家不能用技能点来学习，就给那个技能加上这个属性
		// DOTA_ABILITY_BEHAVIOR_PASSIVE ， 被动技能
		// DOTA_ABILITY_BEHAVIOR_POINT ，点目标技能
		// DOTA_ABILITY_BEHAVIOR_ROOT_DISABLES ，被定身（拥有modifier_rooted）后无法使用这个技能，例如女王敌法的Blink
		// DOTA_ABILITY_BEHAVIOR_RUNE_TARGET ，以神符为目标，小小的投掷
		// DOTA_ABILITY_BEHAVIOR_TOGGLE ，使用一次后激活，再使用一次后取消的技能，例如巫医的恢复术，IO的过载
		// DOTA_ABILITY_BEHAVIOR_UNIT_TARGET ，单位目标技能
		// DOTA_ABILITY_BEHAVIOR_UNRESTRICTED ，无限制，拥有这个属性的技能只有小狗的钻
		"BaseClass"	"ability_datadriven"
		// 技能的基类，一般在自定义技能里面都是使用这个 ability_datadriven ，数据技能
		"AbilityTextureName"	"custom/sample_ability"
		// 技能的ID，重要！ 如果说你没有定义ID，游戏会直接报错，甚至没有报错直接退出。
		// 如果你所定义的某个ID和另一个ID相同，那么，在你将这个技能添加给某一个英雄的时候，实际添加的
		// 可能是同一ID的另一个技能。
		// 建议ID从1850开始，依次排列
		// 以下为技能的字段，除了AbilityBehavior，BaseClass以外的其他字段，都不是必须的，可以根据技能的实际情况选择性地写
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_CHANNELLED"
		// 技能的施法时间
		"AbilityUnitDamageType"	"DAMAGE_TYPE_PURE"
		// 技能的图标，可以是官方的root/resource/flash3/images/spellicons里面的图标文件，也可以是自定义的resource/flash3/images/spellicons里面的.png文件名
		// 所有的字段属性，都可以每一级不相同，每一级的数字之间以空格隔开即可，例如
		// "AbilityCastRange"    "1000 1100 1200 1300"
		// 那么技能的施法距离就是1级的时候1000，四级的时候1300
		"MaxLevel"	"1"
		// 技能的施法距离
		"AbilityCastPoint"	"0.0"
		// 技能如果涉及伤害，那么必须指定伤害类型，包括：
		// DAMAGE_TYPE_COMPOSITE 混合伤害，例如兽王的斧子
		// DAMAGE_TYPE_HP_REMOVAL 生命移除，例如血魔的大招
		// DAMAGE_TYPE_MAGICAL 魔法伤害
		// DAMAGE_TYPE_PHYSICAL 物理伤害
		// DAMAGE_TYPE_PURE 纯粹/真实伤害
		"AbilityCastAnimation"	"ACT_DOTA_DISABLED"
		// 技能的施法前摇，单位为秒
		"AbilityCooldown"	"10.0"
		// 技能的伤害值
		"AbilityManaCost"	"300"
		// 定义技能的最大可升级等级
		"AbilityCastRange"	"1000"
		// 技能的冷却时间
		"AbilityChannelTime"	"2.0 1.8 1.6 1.5"
		"ID"	"1852"
		// 技能所需魔法量
		// 以下是技能需要预载入的文件，包括声音文件和粒子特效文件。
		// 如果不进行载入，那么在技能里面定义的粒子特效和声音都无法正常显示。
		"precache"
		{
			// particlefile指代粒子特效文件，可以是官方的，也可以是自定义的
			"particlefile"	"particles/test_particle.pcf"
			"particlefile"	"particles/econ/generic/generic_aoe_explosion_sphere_1.pcf"
			// soundfile指代声音定义文件，可以是官方的，也可以是自定义的
			"soundfile"	"scripts/game_sounds_heroes/game_sounds_gyrocopter.txt"
			"soundfile"	"soundevents/game_sounds_heroes/game_sounds_gyrocopter.vsndevts"
			"particle"	"generic_aoe_explosion_sphere_1"
			"soundfile"	"soundevents/game_sounds_heroes/game_sounds_gyrocopter.vsndevts"
			"particle"	"channel_field_2"
		}
		// 以下字段是定义了技能的基本触发字段，触发必须以触发类型为开头，例如OnSpellStart，当技能开始时，按照技能
		// ->动作 ->技能 -> 动作的顺序排列，详细的范例可以参考迎霜节的文件，
		// 迎霜节的npc文件夹/npc_abilities_custom.txt
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"Target"	"CASTER"
				"ModifierName"	"modifier_channel_start"
			}
			"FireSound"
			{
				"EffectName"	"Hero_Gyrocopter.CallDown.Fire"
				"Target"	"CASTER"
			}
		}
		// 上面这段的意思是：当技能开始的时候，添加一个modifier给caster也就是施法者
		// modifier的名字是modifier_channel_start，
		// 在添加modifier的同时，播放一个声音，声音的名字叫Hero_Gyrocopter.CallDown.Fire，声音的播放者也是caster
		// 下面这个范例比较长，我分开来写
		// 当持续施法成功
		// OnChannelSucceeded这个触发的所有动作定义完毕
		"OnChannelSucceeded"
		{
			"RemoveModifier"
			{
				"Target"	"CASTER"
				"ModifierName"	"modifier_channel_start"
			}
			// 在caster身上移除名为modifier_channel_start的modifier
			"AttachEffect"
			{
				"EffectName"	"generic_aoe_explosion_sphere_1"
				"EffectAttachType"	"follow_origin"
				"EffectRadius"	"%radius"
				"EffectDurationScale"	"1"
				"EffectLifeDurationScale"	"1"
				"EffectColorA"	"255 0 0"
				"EffectColorB"	"255 0 0"
				"Target"	"CASTER"
			}
			// 在caster身上附加一个粒子特效，特效名字为generic_aoe_explosion_sphere_1（这是在pcf文件里面定义的）
			// 粒子特效的跟随方式是跟随头顶，特效的范围是下方"AbilityValues"中radius字段所指定的范围，
			// 再之后的  "EffectDurationScale" "1"
			//          "EffectLifeDurationScale" "1"
			//          "EffectColorA"      "255 0 0"
			//          "EffectColorB"      "255 0 0"
			// 都是在[pcf]文件里面所定义的东西，其他重要的东西还包括粒子特效的控制点，ContrilPoints{}等等
			"Damage"
			{
				"Damage"	"%damage"
				"Target"
				{
					"Center"	"CASTER"
					"Radius"	"%radius"
					"Teams"	"DOTA_UNIT_TARGET_TEAM_ENEMY"
					"Types"	"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
				}
			}
			// 附加伤害，伤害值为下方"AbilityValues"部分所定义的damage字段，目标是以施法者为中心
			// 范围radius，敌方的英雄和基础单位
			"Knockback"
			{
				"Center"	"CASTER"
				"Target"
				{
					"Center"	"CASTER"
					"Radius"	"%radius"
					"Teams"	"DOTA_UNIT_TARGET_TEAM_ENEMY"
				}
				"Duration"	"%duration"
				"Distance"	"%distance"
				"Height"	"%height"
			}
			// 击飞目标，击飞的中心点是CASTER，击飞的目标是以施法者为中心，范围radius范围内的敌方单位
			// 击飞持续时间是duration，击飞距离是distance，击飞高度是Height，当然，你也可以定义一个
			// 击飞距离是0，击飞高度很高的，让目标成为一个原地上上下下………………
			"FireSound"
			{
				"EffectName"	"Hero_Gyrocopter.CallDown.Damage"
				"Target"	"CASTER"
			}
		}
		"OnChannelFinish"
		{
			"RemoveModifier"
			{
				"Target"	"CASTER"
				"ModifierName"	"modifier_channel_start"
			}
		}
		// 当施法结束
		"OnChannelInterrupted"
		{
			"RemoveModifier"
			{
				"Target"	"CASTER"
				"ModifierName"	"modifier_channel_start"
			}
		}
		// 当施法被中断
		// 其他的触发和方法还有很多，
		// 很多方法都是配对使用的
		// 比如说 "SpawnUnit"，创建单位和 "OnUnitSpawn"，就可以在单位创建之后执行一些动作
		// 具体的实例还是请参考迎霜节的技能文件，里面有很多范例
		// 例如：
		// "OnSpellStart"
		// {
		//  "RunScript"
		//  {
		//    "ScriptFile"    "scripts/vscripts/dota2x.lua"
		//    "FunctionName"  "OnAbilityStart"
		//    "Target"        "POINT"
		//  }
		// }
		// 就可以在技能开始施法的时候运行dota2x.lua里面的
		// function OnAbilityStart(keys)
		//  PrintTable(keys)
		// end
		// 所有这个函数的参数都会以一个table的形式传递给keys，比如keys.caster_entindex，keys.target_points等等
		// 具体的应用可以用PrintTable(keys)打印出来传递的值，再在程序中进行处理
		// 要特别注意的是，根据Target字段的不同，传递的keys也会不同。Target可以是TARGET,CASTER,POINT,ATTACKER等等
		// 需要具体问题具体分析
		// 此外，在RunScript里面所定义的所有字段，都会以字符串的形式传递进LUA，
		// 例如我们在 "Target"        "POINT"下方再加一个"ABILITY_Special"  "ABC",那么我们在lua程序里面通过
		// 写local specialvalue = keys.ABILITY_Special，就可以给specialvalue赋予一个ABC的字符串数值。
		// 以下定义的是技能的Modifiers，这里写的是上文触发中所提到的内容，当然，如果你是一个被动技能
		// 单纯给目标添加buff/debuff的
		// 那么你也可以不用触发，直接开始写Modifiers
		// 例如
		// "Modifiers"
		// {
		//  "modifier_passive_modifier"
		//  {
		//    "Passive" "1"
		//  }
		// }
		// 如果是被动的modifier，那么就必须指定"Passive"字段
		// 当然，你也可以定义一个"IsHidden" "1"，来隐藏这个modifier，让他不显示在玩家的面板上
		// Modifiers的格式，除了Modifier的名字，比如这里的modifier_channel_start，其他的同样遵循
		// 触发->动作的原则
		"Modifiers"
		{
			"modifier_channel_start"
			{
				"OnCreated"
				{
					"AttachEffect"
					{
						"IsHidden"	"1"
						"EffectName"	"channel_field_2"
						"EffectAttachType"	"follow_origin"
						"Target"	"CASTER"
						"EffectRadius"	"%radius"
						"EffectColorA"	"255 0 0"
						"EffectColorB"	"255 0 0"
						"ControlPoints"
						{
							"00"	"50 100 5"
						}
					}
				}
			}
		}
		// 技能的特殊值，在上文用%字段名所引用的数值，都必须在此处进行定义，否则会出错
		// 当然，如果上文没有使用的数值，这里同样可以定义，此外，在lua里面可以通过
		// GetSpecialValueFor("字段名")的方式来获取当前等级的AbilityValues数值。
		// 也可以通过在多语言文本resource/addon_english.txt,resource/addon_schinese.txt里面
		// 通过定义"DOTA_Tooltip_ability_sample_ability_字段名"的方式让这些数值显示在玩家的面板上。
		// 格式为：
		// "值编号"
		// {
		//  "var_type" "数值类型"
		//  "字段名"   "数值"
		// }
		"AbilityValues"
		{
			"duration"
			{
				"value"	"0.5"
				"LinkedSpecialBonus" "special_bonus_sample_1"
			}
			//指定与之对应的天赋，使得获得天赋后可改变对应的值

			//"LinkedSpecialBonusOperation"		"SPECIAL_BONUS_MULTIPLY"
			//指定天赋与变量作用的方式，这里为倍乘，箬没有该字段，默认为叠加
			//除此之外，还有"SPECIAL_BONUS_SUBTRACT"（减少），"SPECIAL_BONUS_PERCENTAGE_ADD"(按百分比叠加)

			//"LinkedSpecialBonusField"	"value"
			//指定天赋中某个值作用到该变量上
			"damage"
			{
				"value"	"400 600 800 1000"
				"CalculateSpellDamageTooltip" "0" //该键值决定该变量的面板是否计算技能增强，0为不计算，如果变量被命名为“damage”则默认为1
				"DamageTypeTooltip"		"DAMAGE_TYPE_NONE"//指定变量的面板类型，NONE为无类型，若变量名带有damage，则默认与技能类型同步
			}
			"radius"
			{
				"value"			"550 550 600 650"
				"affected_by_aoe_increase"	"1"
			}
			"distance"	"400 500 600 700"
			"height"	"100 200 300 400"
		}
		"AbilityCastAnimation"			"ACT_DOTA_OVERRIDE_ABILITY_2"
		// 技能的施法动作，这个施法动作的名字，可以通过HLMV.exe查看模型的动作，也可以使用通用的动作。
		"AbilityDamage"	"400 600 800 1000"
	}

	//新.技能模板
	"ability_base_test"
	{
		// General
		//-------------------------------------------------------------------------------------------------------------
		//"ID"							"0"														// unique ID number for this ability.  Do not change this once established or it will invalidate collected stats.
		"AbilityType"					"DOTA_ABILITY_TYPE_BASIC"
		"AbilityBehavior"				"DOTA_ABILITY_BEHAVIOR_NONE"
		"OnCastbar"						"1"
		"OnLearnbar"					"1"
		"FightRecapLevel"				"0"
	
		// Stats
		//-------------------------------------------------------------------------------------------------------------
		"AbilityCastRange"				"0"	//施法距离
		"AbilityCastRangeBuffer"		"250"//额外生效距离
		"AbilityCastPoint"				"0.0 0.0 0.0 0.0"//施法前摇
		"AbilityChannelTime"			"0.0 0.0 0.0 0.0"//持续施法时间
		"AbilityCooldown"				"0.0 0.0 0.0 0.0"//技能冷却时间
		"AbilityDuration"				"0.0 0.0 0.0 0.0"//技能持续时间
		"AbilitySharedCooldown"			""//冷却共享技能,内容为与之共享冷却的技能名
		"AbilityDamage"					"0 0 0 0"//技能伤害
		"AbilityManaCost"				"0 0 0 0"//技能魔法消耗
		"AbilityModifierSupportValue"	"1.0"	// for stats tracking.
		"AbilityModifierSupportBonus"	"0"		// for stats tracking.
		// Item Info	
		//-------------------------------------------------------------------------------------------------------------
		"ItemCost"						"0"
		"ItemInitialCharges"			"0"
		"ItemCombinable"				"1"
		"ItemPermanent"					"1"
		"ItemStackable"					"0"
		"ItemRecipe"					"0"
		"ItemDroppable"					"1"
		"ItemPurchasable"				"1"
		"ItemSellable"					"1"
		"ItemRequiresCharges"			"0"
		"ItemKillable"					"1"
		"ItemDisassemblable"			"0"
		"ItemShareability"				"ITEM_NOT_SHAREABLE"
		"ItemDeclaresPurchase"			"0"
        "ItemIsNeutralDrop"             "0"
	}

	"ability_system_fly"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_system_fly"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"OnSpellStart"	{}
		"Modifiers"
		{
			"modifier_system_fly"
			{
				"Passive"	"1"
				"IsHidden"	"0"	
				"States"
				{
					"MODIFIER_STATE_FLYING"	"MODIFIER_STATE_VALUE_ENABLED"
				}			
			}			
		}
		"AbilityValues"
		{			
		}
	}

	"ability_collection_find_master"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/rubick_empty1"
		"Modifiers"
		{
			"aura_ability_collection_find_master"
			{
				"IsHidden"	"1"
				"Passive"	"1"
				"Aura"	"modifier_ability_collection_move"
				"Aura_Radius"	"%find_radius"
				"Aura_Teams"	"DOTA_UNIT_TARGET_TEAM_BOTH"
				"Aura_Types"	"DOTA_UNIT_TARGET_HERO"
				"Aura_Flags"	"DOTA_UNIT_TARGET_FLAG_NONE"
				// "Aura_Flags"	"DOTA_UNIT_TARGET_FLAG_NO_INVIS | DOTA_UNIT_TARGET_FLAG_NOT_ILLUSIONS"
				"Aura_ApplyToCaster"	"0"
			}
			"modifier_ability_collection_move"
			{
				"Attributes"	"MODIFIER_ATTRIBUTE_MULTIPLE"
				"IsHidden"	"1"
				"ThinkInterval"	"%move_interval"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/abilityCollection.lua"
						"Function"	"OnCollectionMoveToMaster"
						"FindRadius"	"%find_radius"
						"MaxMovespeed"	"%max_movespeed"
					}
				}
			}
		}
		"AbilityValues"
		{
			"find_radius"	"500.0"
			"move_interval"	"0.03"
			"max_movespeed"	"25"
		}
	}

	"ability_common_power_buff"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_collection_power"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"Modifiers"
		{
			"common_thdots_power_str_buff"
			{	
				"RemoveOnDeath"				"0"

				"Properties"
				{
					"MODIFIER_PROPERTY_STATS_STRENGTH_BONUS"	"1"
				}
			}
			"common_thdots_power_agi_buff"
			{	
				"RemoveOnDeath"				"0"

				"Properties"
				{
					"MODIFIER_PROPERTY_STATS_AGILITY_BONUS"	"1"
				}
			}
			"common_thdots_power_int_buff"
			{	
				"RemoveOnDeath"				"0"

				"Properties"
				{
					"MODIFIER_PROPERTY_STATS_INTELLECT_BONUS"	"1"
				}
			}
			"common_thdots_power_all_buff"
			{	
				"RemoveOnDeath"				"0"

				"Properties"
				{
					"MODIFIER_PROPERTY_STATS_STRENGTH_BONUS"	"0.3"
					"MODIFIER_PROPERTY_STATS_INTELLECT_BONUS"	"0.3"
					"MODIFIER_PROPERTY_STATS_AGILITY_BONUS"	    "0.3"
				}
			}
		}
	}

	"ability_dummy_unit"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/rubick_empty1"
		"Modifiers"
		{
			"dummy_unit"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"Attributes"	"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE"
				
				"States"
				{
					"MODIFIER_STATE_ATTACK_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_MAGIC_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NOT_ON_MINIMAP"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_HEALTH_BAR"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_UNIT_COLLISION"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNTARGETABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_INVULNERABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					//"MODIFIER_STATE_TRUESIGHT_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"-100"
					"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE"	"1"
				}
			}
		}
	}

	"ability_dummy_unit_innate"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/rubick_empty1"
		"Innate"	"1"
		"Modifiers"
		{
			"dummy_unit"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"Attributes"	"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE"
				
				"States"
				{
					"MODIFIER_STATE_ATTACK_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_MAGIC_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NOT_ON_MINIMAP"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_HEALTH_BAR"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_UNIT_COLLISION"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNTARGETABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_INVULNERABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					//"MODIFIER_STATE_TRUESIGHT_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"-100"
					"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE"	"1"
				}
			}
		}
	}

	"ability_invisible_dummy_unit"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/rubick_empty1"
		"Modifiers"
		{
			"dummy_unit"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"Attributes"	"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE"
				
				"States"
				{
					"MODIFIER_STATE_ATTACK_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_MAGIC_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NOT_ON_MINIMAP"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_HEALTH_BAR"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_UNIT_COLLISION"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNTARGETABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_INVULNERABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_INVISIBLE"		"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_TRUESIGHT_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"-100"
					"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE"	"1"
				}
			}
		}
	}

	"ability_rinEx_dummy_unit"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/rubick_empty1"
		"Modifiers"
		{
			"dummy_unit"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"Attributes"	"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE"
				"States"
				{
					"MODIFIER_STATE_ATTACK_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_MAGIC_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NOT_ON_MINIMAP"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_HEALTH_BAR"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_NO_UNIT_COLLISION"	"MODIFIER_STATE_VALUE_ENABLED"
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"-100"
					"MODIFIER_PROPERTY_ABSOLUTE_NO_DAMAGE_PURE"	"1"
				}
			}
		}
	}

	"ability_stunsystem_stun"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"AbilityCooldown"	"0"
		"precache"
		{
			"particle"	"particles/generic_gameplay/generic_stunned.vpcf"
		}
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_stunsystem_stun"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_stunsystem_stun"
			{
				"IsHidden"	"1"
				"EffectName"	"particles/generic_gameplay/generic_stunned.vpcf"
				"EffectAttachType"	"follow_overhead"
				"OverrideAnimation"	"ACT_DOTA_DISABLED"
				"States"
				{
					"MODIFIER_STATE_STUNNED"	"MODIFIER_STATE_VALUE_ENABLED"
				}
			}
		}
	}

	"ability_system_disarmed"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"AbilityCooldown"	"0"
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_system_disarmed"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_system_disarmed"
			{
				"States"
				{
					"MODIFIER_STATE_DISARMED"	"MODIFIER_STATE_VALUE_ENABLED"
				}
			}
		}
	}

	"ability_system_invulnerable"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"AbilityCooldown"	"0"
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_system_invulnerable"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_system_invulnerable"
			{
				"States"
				{
					"MODIFIER_STATE_ATTACK_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_MAGIC_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_UNSELECTABLE"	"MODIFIER_STATE_VALUE_ENABLED"
				}
				"Properties"
				{
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"-100"
				}
			}
		}
	}

	"ability_system_nodamage"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"AbilityCooldown"	"0"
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_system_nodamage"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_system_nodamage"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_INCOMING_DAMAGE_PERCENTAGE"	"-100"
				}
			}
		}
	}

	"ability_stunsystem_pause"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"AbilityCooldown"	"0"
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_stunsystem_pause"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_stunsystem_pause"
			{
				// "Attributes"			"MODIFIER_ATTRIBUTE_IGNORE_INVULNERABLE"
				"States"
				{
					"MODIFIER_STATE_STUNNED"	"MODIFIER_STATE_VALUE_ENABLED"
				}
			}
		}
	}

	"ability_sliencesystem_Silence"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"MaxLevel"	"1"
		"AbilityCooldown"	"0"
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_sliencesystem_silence"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_sliencesystem_silence"
			{
				"States"
				{
					"MODIFIER_STATE_SILENCED"	"MODIFIER_STATE_VALUE_ENABLED"
				}
			}
		}
	}

	"ability_system_collision"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"MaxLevel"	"1"
		"AbilityCooldown"	"0"
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_system_collision"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_system_collision"
			{
				"States"
				{
					"MODIFIER_STATE_NO_UNIT_COLLISION"	"MODIFIER_STATE_VALUE_ENABLED"
				}
			}
		}
	}

	"ability_system_magicImmune"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"MaxLevel"	"1"
		"AbilityCooldown"	"0"
		"precache"
		{
			"particle_folder"	"particles/thd2/heroes/reimu"
		}
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_system_magicImmune"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_system_magicImmune"
			{
				"States"
				{
					"MODIFIER_STATE_MAGIC_IMMUNE"	"MODIFIER_STATE_VALUE_ENABLED"
				}
			}
		}
	}

	"ability_system_criticalstrike"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_system_criticalstrike"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"OnSpellStart"	{}
		"Modifiers"
		{
			"modifier_system_attack"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"OnAttackStart"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_system_criticalstrike"
						"Target"	"CASTER"
					}
					"Random"
					{
						"Chance"	"%RandomchanceValue"
						"OnSuccess"
						{
							"ApplyModifier"
							{
								"ModifierName"	"modifier_system_criticalstrike"
								"Target"	"CASTER"
							}
						}
					}
				}
			}
			"modifier_system_criticalstrike"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE"	"%damage_multi"
				}
				"OnAttackLanded"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_system_criticalstrike"
						"Target"	"CASTER"
					}
				}
			}
		}
		"AbilityValues"
		{
			"damage_multi"	"200"
			"RandomchanceValue"	"15"
		}
	}

	"ability_system_criticalstrike_2"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_system_criticalstrike"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"OnSpellStart"	{}
		"Modifiers"
		{
			"modifier_system_attack_2"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"OnAttackStart"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_system_criticalstrike_2"
						"Target"	"CASTER"
					}
					"Random"
					{
						"Chance"	"%RandomchanceValue"
						"OnSuccess"
						{
							"ApplyModifier"
							{
								"ModifierName"	"modifier_system_criticalstrike_2"
								"Target"	"CASTER"
							}
						}
					}
				}
			}
			"modifier_system_criticalstrike_2"
			{
				"Properties"
				{
					"MODIFIER_PROPERTY_PREATTACK_CRITICALSTRIKE"	"%damage_multi"
				}
				"OnAttackLanded"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_system_criticalstrike_2"
						"Target"	"CASTER"
					}
				}
			}
		}
		"AbilityValues"
		{
			"damage_multi"	"200"
			"RandomchanceValue"	"40"
		}
	}	

	"ability_system_reborn"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_system_reborn"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"OnSpellStart"	{}
		"Modifiers"
		{
			
			"modifier_system_reborn"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"Properties"
				{
					"MODIFIER_PROPERTY_RESPAWNTIME_PERCENTAGE"	"%reduce_time"
				}
			}
		}	
		"AbilityValues"
		{
			"reduce_time"	"-25"
		}
	}

	"ability_momiji01_invisible"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"MaxLevel"	"1"
		"OnSpellStart"	{}
		"Modifiers"
		{
			"modifier_momiji01_invisible"
			{
				"States"
				{
					"MODIFIER_STATE_INVISIBLE"	"MODIFIER_STATE_VALUE_ENABLED"
				}
				"OnAttackLanded"
				{
					"RemoveModifier"
					{
						"ModifierName"	"modifier_momiji01_invisible"
						"Target"	"CASTER"
					}
					"RunScript"
					{
						"Target"	"CASTER"
						"ScriptFile"	"scripts/vscripts/abilities/abilityMomiji.lua"
						"Function"	"OnMomiji01UnitAttackLanded"
					}
				}
			}
		}
	}

	"ability_system_antiinvisible"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_IGNORE_BACKSWING | DOTA_ABILITY_BEHAVIOR_IMMEDIATE | DOTA_ABILITY_BEHAVIOR_IGNORE_TURN | DOTA_ABILITY_BEHAVIOR_UNIT_TARGET"
		"MaxLevel"	"1"
		"AbilityCooldown"	"0"
		"OnSpellStart"
		{
			"ApplyModifier"
			{
				"ModifierName"	"modifier_system_antiinvisible"
				"Target"	"TARGET"
			}
		}
		"Modifiers"
		{
			"modifier_system_antiinvisible"
			{
				"States"
				{
					"MODIFIER_STATE_PROVIDES_VISION"	"MODIFIER_STATE_VALUE_ENABLED"
					"MODIFIER_STATE_INVISIBLE"	"MODIFIER_STATE_VALUE_DISABLED"
				}
			}
		}
	}

	"ability_collection_power"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_collection_power"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_NO_TARGET | DOTA_ABILITY_BEHAVIOR_IMMEDIATE"
		"AbilityUnitTargetType"	"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"AbilityCastPoint"	"0"
		"AbilityCooldown"	"0"
		// Stats
		// ----------------------------------------------------------------
		"AbilityManaCost"	"0"
		"OnSpellStart"
		{
			"RunScript"
			{
				"Target"
				{
					"Center"	"CASTER"
					"Teams"	"DOTA_UNIT_TARGET_TEAM_NONE"
					"Radius"	"1500"
					"Flags"	"DOTA_UNIT_TARGET_FLAG_INVULNERABLE"
				}
				"ScriptFile"	"scripts/vscripts/abilities/abilityCollection.lua"
				"Function"	"OnCollectionPower"
			}
		}
	}
	"ability_ex_bot_buff"
	{
			// General
		// -------------------------------------------------------------------------------------------------------------
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_thdots_sanae03"
		"AbilityUnitTargetTeam"	"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"Modifiers"
		{	
			"modifier_ex_bot"
			{
				"IsHidden"	"0"
				"Passive"				"1"	
				"RemoveOnDeath"	"0"
				"OnRespawn"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/bot_buff.lua"
						"Function"	"Noob"
						"Target"	"CASTER"
					}
				}
			}
			"modifier_ex_bot_buff"
			{
				"IsHidden"	"0"
				"Duration"	"40"
				"RemoveOnDeath"	"1"
				"OnDeath"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/bot_buff.lua"
						"Function"	"NoobBuff"
						"Target"	"CASTER"
						"BonusOnDeath" 		"%bouns_value"
						"Bonus" 			"%bouns_gold"
					}
				}		
			}
		}
		"AbilityValues"
		{
			"bouns_gold"  "100"
			"bouns_value" "5"
		}
	}
	"ability_common_bot_buff"
	{
		// General
		// -------------------------------------------------------------------------------------------------------------
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_thdots_sanae03"
		"AbilityUnitTargetTeam"	"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_AURA"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"4"
		// Data driven
		// -------------------------------------------------------------------------------------------------------------
		
		"OnOwnerDied"
		{
			"RunScript"
			{
				"ScriptFile"	"scripts/vscripts/abilities/bot_buff.lua"
				"Function"	"DeathBuff"
				"Target"	"CASTER"
				"BonusOnDeath"	"%ex_death_gold"
			}
		}
		
		
		"Modifiers"
		{
			"modifier_bot_buff"
			{
				"Passive"	"1"
				"IsHidden"	"0"
				"RemoveOnDeath"	"0"
				"Properties"
				{
					"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"	"%mana_regen"
					"MODIFIER_PROPERTY_HEALTH_REGEN_CONSTANT"	"%hp_regen"
					"MODIFIER_PROPERTY_STATS_STRENGTH_BONUS"	"%bouns_value"
					"MODIFIER_PROPERTY_STATS_AGILITY_BONUS"	"%bouns_value"
					"MODIFIER_PROPERTY_STATS_INTELLECT_BONUS"	"%bouns_value"
				}
			}
			"modifier_bot_debuff"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"RemoveOnDeath"	"0"
				"OnAttackStart"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/bot_buff.lua"
						"Function"	"Ability_Bot_SelfStun"
						"Target"	"CASTER"
						"SelfStunDuration"	"%self_stun_duration_atk"
						"SelfStunChance"	"%SelfStunchanceATK"
					}
				}
				
				"OnUnitMoved"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/bot_buff.lua"
						"Function"	"Ability_Bot_SelfStun"
						"Target"	"CASTER"
						"SelfStunDuration"	"%self_stun_duration_mov"
						"SelfStunChance"	"%SelfStunchanceMOV"
					}
				}
			}
			"modifier_bot_give_gold"
			{
				"Passive"	"1"
				"IsHidden"	"1"
				"RemoveOnDeath"	"0"
				"ThinkInterval"	"%interval"
				"AllowIllusionDuplicate"	"0"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/bot_buff.lua"
						"Function"	"Ability_Bot_Buff_OnInterval"
						"Target"	"CASTER"
						"GiveGoldAmount"	"%give_gold_amount"
						"GiveExpAmount"	"%give_exp_amount"
						"GiveSpecialBonus"	"%give_exp_amount"
						"IncreaseAllstat"	"%increaseallstat"
					}
				}
			}
			"modifier_bot_corrector"
			{
				"Passive"	"1"
				"IsHidden"	"0"
				"RemoveOnDeath"	"0"
				"ThinkInterval"	"0.1"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/bot_buff.lua"
						"Function"	"Ability_Bot_Buff_DeleteRune_OnInterval"
						"Target"	"CASTER"
					}
				}
			}
		}
		// Special
		// -------------------------------------------------------------------------------------------------------------
		"AbilityValues"
		{
			"mana_regen"	"0 0 5 20"
			"hp_regen"	"0 0 2 4"
			"bouns_value"	"-5 0 8 12"
			"interval"	"10 10 10 10"
			"give_gold_amount"	"0 0 30 50"
			"give_exp_amount"	"0 0 15 20"
			"special_bonus_mul"	"0 0 0.3 1.0"
			"SelfStunchanceATK"	"0.33 0.1 0 0"
			"self_stun_duration_atk"	"0.3 0.1 0 0"
			"SelfStunchanceMOV"	"0.002 0 0 0"
			"self_stun_duration_mov"	"3 0 0 0"
			"increaseallstat"	"0 0 0.1 0.2"
			"ex_death_gold"	"0 0 300 600"
		}
	}

	"ability_fast_respawn_buff"
	{
		"BaseClass"	  "ability_lua"
		"ScriptFile"	"scripts/vscripts/abilities/specialmode_modifier.lua"
		"AbilityTextureName"	"custom/ability_thdots_sanae03"
		"AbilityUnitTargetTeam"	"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_AURA"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
	}

	"ability_fast_cd_buff"
	{
		"BaseClass"	  "ability_datadriven"
		"AbilityTextureName"	"custom/ability_thdots_sanae03"
		"AbilityUnitTargetTeam"	"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN | DOTA_ABILITY_BEHAVIOR_AURA"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
		"Modifiers"
		{
			"modifier_cooldown_reduction_80"
			{
				"Passive"	"1"
				"RemoveOnDeath"	"0"
				"Properties"
				{
					"MODIFIER_PROPERTY_COOLDOWN_PERCENTAGE"	 "%reduction_cooldown"
					"MODIFIER_PROPERTY_MANA_REGEN_CONSTANT"	 "%mana_regen"
				}
			}
		}
		// Special
		// -------------------------------------------------------------------------------------------------------------
		"AbilityValues"
		{
			"reduction_cooldown"	"80"
			"mana_regen"	"50"
		}
	}
	"ability_starwberryability_buff"
	{
		"BaseClass"	  "ability_lua"
		"ScriptFile"	"scripts/vscripts/util/starwberry.lua"
		"AbilityTextureName"	"custom/ability_thdots_sanae03"
		"AbilityUnitTargetTeam"	"DOTA_UNIT_TARGET_TEAM_FRIENDLY"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		"MaxLevel"	"1"
	}

	"ability_thdots_anti_bd"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityTextureName"	"custom/ability_thdots_anti_bd"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE | DOTA_ABILITY_BEHAVIOR_HIDDEN"
		"AbilityUnitTargetType"	"DOTA_UNIT_TARGET_HERO | DOTA_UNIT_TARGET_BASIC"
		"AbilityUnitTargetTeam"	"DOTA_UNIT_TARGET_TEAM_ENEMY"
		"precache"
		{
		}
		"Modifiers"
		{
			"passive_check_bd"
			{
				"Passive"	"1"
				"ThinkInterval"	"0.2"
				"IsHidden"	"1"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"Target"		"CASTER"
						"ScriptFile"	"scripts/vscripts/abilities/abilitytower.lua"
						"Function"		"OnCheckNearby"
						"Radius"		"%radius"
					}
				}
			}
			"modifier_thdots_tower_attacked"
			{
				"Passive"	"1"	
				"IsHidden"	"1"
                "IsBuff"	"1"		
				"OnTakeDamage"
				{
					"RunScript"
					{
						"ScriptFile"			"scripts/vscripts/abilities/abilitytower.lua"
						"Function"				"OnTowerAttacked"
						"Caster"				"CASTER"
						"DamageTaken"			"%attack_damage"
					}					
				}
			}
			"modifier_thdots_anti_bd_stop"
			{
				"Duration"			"%duration"
				"IsHidden"		"1"
				"IsBuff"			"1"
			}
		}
		"AbilityValues"
		{
			"duration"	"1.0"
			"radius"	"850"
		}
	}

	"roshan_death"
	{
		"BaseClass"	"ability_lua"
		"ScriptFile"	"scripts/vscripts/abilities/abilityroshan.lua"
		//"AbilityTextureName"	"alchemist_goblins_greed"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		// Stats
		// ----------------------------------------------------------------
		"MaxLevel"	"0"	
		"AbilityValues"
		{
			"aura_radius"	"1000"
			"armor_bonus"		"12"
			"magic_resistence"		"50"
			"duration"		"120"
		}
	}
	"roshan_purge"
	{
		"BaseClass"	"ability_datadriven"
		"AbilityBehavior"	"DOTA_ABILITY_BEHAVIOR_PASSIVE"
		"AbilityType"	"DOTA_ABILITY_TYPE_HIDDEN"
		// Stats
		// ----------------------------------------------------------------
		"MaxLevel"	"0"	
		"AbilityCooldown" "6"
		"Modifiers"
		{
			"modifier_roshan_purge"
			{
				"Passive" "1"
				"Attributes"	"MODIFIER_ATTRIBUTE_PERMANENT"
				"IsBuff"	"1"
				"IsHidden"	"1"
				"ThinkInterval"	"6"
				"OnIntervalThink"
				{
					"RunScript"
					{
						"ScriptFile"	"scripts/vscripts/abilities/abilityroshan.lua"
						"Function"	"Ability_Roshan_Purge"
					}
				}				
			}
		}
		
	}
}


